{"version":3,"file":"static/js/404.f45906cd.chunk.js","mappings":"iPAyEA,WAAeA,EAAAA,EAAAA,IAhEC,WACd,OAA2BC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,KAAK,IAArDC,EAAO,EAAPA,QAASC,EAAK,EAALA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,MAAO,GACPC,YAAa,IAEfC,iBAAkBC,EAAAA,EAClBC,SAAU,SAACC,GACT,IAAMC,EAAKC,KAAKC,MAAsB,IAAhBD,KAAKE,UAC3Bd,GACEe,EAAAA,EAAAA,IAAW,CAAEJ,GAAAA,EAAIN,MAAOK,EAAOL,MAAOC,YAAaI,EAAOJ,eAEzDU,SACAC,MAAK,WACJnB,EAAS,IACX,IACCoB,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACd,GACJ,IAGF,OACE,UAAC,IAAI,CAACV,SAAUP,EAAOoB,aAAa,WAClC,UAAC,UAAU,CAACC,UAAU,OAAOC,UAAU,4BAA2B,WAChE,SAAC,UAAU,qBACX,SAAC,YAAY,CACXC,KAAK,OACLC,KAAK,QACLC,SAAUzB,EAAO0B,aACjBC,MAAO3B,EAAOQ,OAAOL,MACrByB,YAAa5B,EAAO6B,OAAO1B,SAE7B,SAAC,qBAAqB,CAACoB,KAAK,UAAS,SAClCvB,EAAO6B,OAAO1B,YAGnB,UAAC,UAAU,CAACkB,UAAU,OAAOC,UAAU,+BAA8B,WACnE,SAAC,UAAU,2BACX,SAAC,YAAY,CACXQ,GAAG,WACHC,KAAM,EACNP,KAAK,cACLC,SAAUzB,EAAO0B,aACjBC,MAAO3B,EAAOQ,OAAOJ,YACrBwB,YAAa5B,EAAO6B,OAAOzB,eAE7B,SAAC,qBAAqB,CAACmB,KAAK,UAAS,SAClCvB,EAAO6B,OAAOzB,kBAGnB,SAAC,IAAc,CAACV,QAASA,EAASC,MAAOA,EAAM,UAC7C,SAAC,IAAM,CAACqC,QAAQ,UAAUT,KAAK,SAAQ,wBAM/C,G,qECrEajB,EAAa2B,EAAAA,KAAaC,MAAM,CAC3C/B,MAAO8B,EAAAA,KACJE,IAAI,EAAG,wCACPC,IAAI,GAAI,2CACRC,SAAS,sBACZjC,YAAa6B,EAAAA,KAAaI,SAAS,4B,8CCGrC,IARkB,SAACC,GAKjB,OAJgB,SAACC,GAEf,OADmBhD,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMgD,IAAI,IAA3CC,UACW,SAACH,EAAS,IAAK,qBACnC,CAEF,C","sources":["pages/AddPost.jsx","util/validationSchema.js","util/withGuard.js"],"sourcesContent":["import React from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { insertPost } from \"../state/postSlice\";\r\nimport { useNavigate } from \"react-router\";\r\nimport LoadingHandler from \"../components/LoadingHandler\";\r\nimport WithGuard from \"../util/withGuard\";\r\nimport { useFormik } from \"formik\";\r\nimport { postSchema } from \"../util/validationSchema\";\r\nconst AddPost = () => {\r\n  const { loading, error } = useSelector((state) => state.posts);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: \"\",\r\n      description: \"\",\r\n    },\r\n    validationSchema: postSchema,\r\n    onSubmit: (values) => {\r\n      const id = Math.floor(Math.random() * 100);\r\n      dispatch(\r\n        insertPost({ id, title: values.title, description: values.description })\r\n      )\r\n        .unwrap()\r\n        .then(() => {\r\n          navigate(\"/\");\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Form onSubmit={formik.handleSubmit}>\r\n      <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n        <Form.Label>Title</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          name=\"title\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.title}\r\n          isInvalid={!!formik.errors.title}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {formik.errors.title}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n        <Form.Label>Description</Form.Label>\r\n        <Form.Control\r\n          as=\"textarea\"\r\n          rows={3}\r\n          name=\"description\"\r\n          onChange={formik.handleChange}\r\n          value={formik.values.description}\r\n          isInvalid={!!formik.errors.description}\r\n        />\r\n        <Form.Control.Feedback type=\"invalid\">\r\n          {formik.errors.description}\r\n        </Form.Control.Feedback>\r\n      </Form.Group>\r\n      <LoadingHandler loading={loading} error={error}>\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </LoadingHandler>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default WithGuard(AddPost);\r\n","import * as Yup from \"yup\";\r\n\r\nexport const postSchema = Yup.object().shape({\r\n  title: Yup.string()\r\n    .min(2, \"Please insert 2 characters at Least!\")\r\n    .max(50, \"Please insert 50 characters at maximum!\")\r\n    .required(\"Title is required!\"),\r\n  description: Yup.string().required(\"Description is required\"),\r\n});\r\n\r\n","import { useSelector } from \"react-redux\";\r\n\r\nconst WithGuard = (Component) => {\r\n  const Wrapper = (props) => {\r\n    const {isLogged} = useSelector(state => state.auth)\r\n    return isLogged ? <Component/> : 'Please Login First!';\r\n  };\r\n  return Wrapper;\r\n};\r\n\r\nexport default WithGuard;\r\n"],"names":["WithGuard","useSelector","state","posts","loading","error","navigate","useNavigate","dispatch","useDispatch","formik","useFormik","initialValues","title","description","validationSchema","postSchema","onSubmit","values","id","Math","floor","random","insertPost","unwrap","then","catch","e","console","log","handleSubmit","className","controlId","type","name","onChange","handleChange","value","isInvalid","errors","as","rows","variant","Yup","shape","min","max","required","Component","props","auth","isLogged"],"sourceRoot":""}